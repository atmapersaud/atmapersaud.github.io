{"name":"Atma Persaud","tagline":"atma.persaud@gmail.com | (763) 607-8570 | 950 S. Westmoreland Ave., Apt 203, Los Angeles, CA 90006","body":"## Selected Projects\r\n### Avazu Clickthrough Rate Kaggle Competition (2014)\r\nCompeted in a Kaggle competition for a machine learning course. Built classifier to predict whether a user will click an advertisement based on several binary and high-dimensional categorical features. Dataset contained ~10 days of clickthrough data (~12 GB). A variety of approaches were attempted, including neural networks and support vector machines. For the final solution, implemented Follow The Proximally Regularized Leader (FTRL-Proximal) Algorithm, which is based on online logistic regression with L1 regularization. Final implementation in Python. Achieved top 100 (out of ~1600 teams) on leaderboard at time of submission.\r\n\r\n[Link to Kaggle competition](https://www.kaggle.com/c/avazu-ctr-prediction \"Click-Through Rate Prediction\")\r\n\r\n[Link to GitHub repo with final implementation](https://github.com/atmapersaud/kaggle-avazu-ctr-prediction \"Kaggle Avazu CTR Prediction\")\r\n### Analogy Solver (2015)\r\n\r\nNLP course project. Built an analogy solver for solving both multiple choice as well as open-ended analogies. Combined various methods, such as neural word embeddings via [word2vec](https://code.google.com/p/word2vec/ \"word2vec\") and explicit word via latent semantic analysis.  Incorporated semantic data from DBpedia, as well as other features such as part-of-speech tags, prefixes, and suffixes.  Evaluated system using SAT and GRE multiple choice analogy questions as well as [Mikolov dataset] (https://word2vec.googlecode.com/svn/trunk/questions-words.txt \"Mikolov dataset\") of open-ended syntactic and semantic analogies. Final implementation in Python (with NumPy, SciPy, and scikit-learn libraries) and Java (for interfacing with DBpedia), as well as various shell scripts.\r\n\r\n[Link to GitHub repo with final implementation](https://github.com/atmapersaud/analogy-solver \"Analogy Solver\")\r\n### Search Engine for NASA Polar Data (2015)\r\nImplemented end-to-end information retrieval system, including crawling, deduplication, indexing, ranking, and visualization of results on a web front end. Technologies used: Apache Nutch, Solr, D3.js ; Languages used: Java, Python, Javascript, Bash.\r\n\r\n[Link to GitHub repo with final implementation](https://github.com/atmapersaud/nasa-polar-search \"Nasa Polar Search\")\r\n### Parallel Topic Modeling (2014)\r\nImplemented fast parallelized version of Latent Dirichlet Allocation (LDA) for performing topic modeling on New York Times dataset [found here](https://archive.ics.uci.edu/ml/datasets/Bag+of+Words \"NYT Dataset\") (300,000 documents, ~100,000,000 words in corpus). Specifically, the algorithm is called Stochastic Collapsed Variational Bayesian inference, or SCVB0. More details can be found [here] (http://www.ics.uci.edu/~welling/publications/papers/fp1199-foulds.pdf \"SCVB0 Paper\"). Preliminary prototyping in MATLAB and Python using NumPy and SciPy libraries. Final implementation in C++ using OpenMP library for parallelization.\r\n\r\n[Link to GitHub repo with final implementation](https://github.com/sayanghosh/LDA-SCVB0 \"Fast LDA\")\r\n\r\n### Dynamic Topic Modeling (2014)\r\n\r\nExplored the area of dynamic topic modeling. Applied previously-implemented LDA algorithm in this task. Used news articles from Reuters as a dataset (~162,000 articles). These articles were scraped, preprocessed, and stemmed. Using methods in [this paper](http://dl.acm.org/citation.cfm?id=1964765 \"Topic Chains\"), built topic chains from this dataset. Investigated the effect of using different distance metrics when building topic chains.\r\n\r\n[Link to GitHub repo with final implementation](https://github.com/VaradPathak/DynamicLDA \"Dynamic LDA\")\r\n### CSCI 1902 Honors Project (2010)\r\nImplemented several machine learning algorithms in Java, based on their descriptions and Python implementations in the book [Programming Collective Intelligence](http://shop.oreilly.com/product/9780596529321.do \"Programming Collective Intelligence\") by Toby Segaran. These include recommender systems (collaborative filtering), clustering (k-means), document filtering (naive Bayes), decision trees, and searching and ranking.\r\n## Miscellaneous\r\n### Naive Bayes (2015)\r\n\r\nNLP homework project. Built a simple naive Bayes classifier for spam filtering\r\nand sentiment analysis, implemented in Python.\r\n\r\n[Link to Code](https://github.com/atmapersaud/csci544-hw1 \"NLP Naive Bayes\")\r\n### N-gram Language Model for Basic Homophone Correction (2015)\r\n\r\nNLP homework project. Task was to perform homophone correction\r\nfor the following pairs of homophones in a text: \r\n\r\n    it's vs its\r\n    you're vs your\r\n    they're vs their\r\n    loose vs lose\r\n    to vs too\r\n\r\nMy solution was to use n-gram language modeling of the part-of-speech tags. More details about the solution can be found at the link below. Used Microsoft Encarta encyclopedia data as well as Brown corpus containing\r\na variety of document types. Implemented in Python using NLTK library.\r\n\r\n[Link to Code](https://github.com/atmapersaud/csci544-hw3 \"NLP N-gram for Homophone Confusion\")\r\n### Perceptron, Part-of-Speech tagger, Named Entity Recognizer (2015)\r\n\r\nNLP homework project. Built and used a perceptron for POS tagging, as well as named entity recognition. Involved feature engineering to improve accuracy. Implemented in Python.\r\n\r\n[Link to Code](https://github.com/atmapersaud/csci544-hw2 \"NLP Perceptron for POS- and NER-Tagging\")\r\n### ISEF Project - Harvesting the Heart's Energy Using Polyvinylidene Fluoride Thin Film (2009)\r\nInvestigated the potential for harvesting energy from three different chambers of the heart (right ventricle, left ventricle, and right atrium) using piezoelectric materials, in order to extend battery life of pacemakers and defibrillators. Finalist at Intel International Science and Engineering Fair in Reno, NV.\r\n### ISEF Project - Finger Power: Using a Piezoelectric Thin Film To Harvest Energy from Repetitive Finger Movements (2008)\r\nCompared the use of different types of piezoelectric materials (Polyvinylidene Fluoride (PVDF) vs Lead Zirconate Titanate (PZT)) for harvesting energy from keyboard usage. Alternate at Intel International Science and Engineering Fair in Atlanta, GA.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}